{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Register = function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mobno = _useState4[0],\n      setMobno = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Work = _useState8[0],\n      setWork = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var nameHandler = function nameHandler(event) {\n    setName(event.target.value);\n  };\n\n  var mobnoHandler = function mobnoHandler(event) {\n    setMobno(event.target.value);\n  };\n\n  var emailHandler = function emailHandler(event) {\n    setEmail(event.target.value);\n  };\n\n  var workHandler = function workHandler(event) {\n    setWork(event.target.value);\n  };\n\n  var passwordHandler = function passwordHandler(event) {\n    setPassword(event.target.value);\n  };\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    var profileData = {\n      name: name,\n      mobno: mobno,\n      email: email,\n      Work: Work,\n      password: password\n    };\n    setName(\"\");\n    setMobno(\"\");\n    setEmail(\"\");\n    setWork(\"\");\n    setPassword(\"\");\n    props.getData(profileData);\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      width: width - 40,\n      height: '10%',\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(View, {\n      style: styles.inputField,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Name\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: nameHandler\n      })\n    }), _jsx(View, {\n      style: styles.inputField,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Mobile No\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: mobnoHandler\n      })\n    }), _jsx(View, {\n      style: styles.inputField,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Email\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: emailHandler\n      })\n    }), _jsx(View, {\n      style: styles.inputField,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Work\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: workHandler\n      })\n    }), _jsx(View, {\n      style: styles.inputField,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#003f5c\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return setEmail(password);\n        }\n      })\n    }), _jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        style: styles.RegtrBtn,\n        children: _jsx(Text, {\n          onPress: function onPress() {\n            return navigation.navigate('Profile', console.log({\n              submitHandler: submitHandler\n            }));\n          },\n          children: \"REGISTER\"\n        })\n      })\n    }), _jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          style: styles.loginTxt,\n          onPress: function onPress() {\n            return navigation.push('Login');\n          },\n          children: \"Have an account? Login In\"\n        })\n      })\n    })]\n  });\n};\n\nexport default Register;\nvar styles = StyleSheet.create({\n  inputField: {\n    backgroundColor: \"#FFC0CB\",\n    borderRadius: 10,\n    width: width - 60,\n    height: '6%',\n    marginBottom: 20\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  },\n  RegtrBtn: {\n    width: width - 200,\n    borderRadius: 10,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginLeft: 0,\n    backgroundColor: \"#FF1493\"\n  },\n  loginTxt: {\n    marginTop: 30,\n    marginBottom: 30,\n    color: 'green'\n  }\n});","map":{"version":3,"sources":["E:/interview tasks/Profile/Screens/Register.js"],"names":["React","useState","Dimensions","get","width","height","Register","navigation","name","setName","mobno","setMobno","email","setEmail","Work","setWork","password","setPassword","nameHandler","event","target","value","mobnoHandler","emailHandler","workHandler","passwordHandler","submitHandler","preventDefault","profileData","props","getData","flex","alignItems","justifyContent","styles","inputField","TextInput","RegtrBtn","navigate","console","log","loginTxt","push","StyleSheet","create","backgroundColor","borderRadius","marginBottom","padding","marginLeft","marginTop","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, Dimensions } from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst Register = ({ navigation }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [mobno, setMobno] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [Work, setWork] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const nameHandler = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n    const mobnoHandler = (event) => {\r\n        setMobno(event.target.value);\r\n    };\r\n    const emailHandler = (event) => {\r\n        setEmail(event.target.value);\r\n    };\r\n    const workHandler = (event) => {\r\n        setWork(event.target.value);\r\n    };\r\n    const passwordHandler = (event) => {\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const profileData = {\r\n            name: name,\r\n            mobno: mobno,\r\n            email: email,\r\n            Work: Work,\r\n            password: password,\r\n        }\r\n\r\n\r\n        setName(\"\");\r\n        setMobno(\"\");\r\n        setEmail(\"\");\r\n        setWork(\"\");\r\n        setPassword(\"\");\r\n        props.getData(profileData)\r\n    }\r\n    return (\r\n        <View style={{ flex: 1, width: width - 40, height: '10%', alignItems: \"center\", justifyContent: \"center\", }}>\r\n            <View style={styles.inputField}>\r\n                <TextInput\r\n                    style={styles.TextInput}\r\n                    placeholder=\"Name\"\r\n                    placeholderTextColor=\"#003f5c\"\r\n                    onChangeText={nameHandler}\r\n                />\r\n            </View>\r\n            <View style={styles.inputField}>\r\n                <TextInput\r\n                    style={styles.TextInput}\r\n                    placeholder=\"Mobile No\"\r\n                    placeholderTextColor=\"#003f5c\"\r\n                    onChangeText={mobnoHandler}\r\n                />\r\n            </View>\r\n            <View style={styles.inputField}>\r\n                <TextInput\r\n                    style={styles.TextInput}\r\n                    placeholder=\"Email\"\r\n                    placeholderTextColor=\"#003f5c\"\r\n                    onChangeText={emailHandler}\r\n                />\r\n            </View>\r\n            <View style={styles.inputField}>\r\n                <TextInput\r\n                    style={styles.TextInput}\r\n                    placeholder=\"Work\"\r\n                    placeholderTextColor=\"#003f5c\"\r\n                    onChangeText={workHandler}\r\n                />\r\n            </View>\r\n            <View style={styles.inputField}>\r\n                <TextInput\r\n                    style={styles.TextInput}\r\n                    placeholder=\"Password\"\r\n                    placeholderTextColor=\"#003f5c\"\r\n                    secureTextEntry={true}\r\n                    onChangeText={(password) => setEmail(password)}\r\n                />\r\n            </View>\r\n            <View>\r\n\r\n                <TouchableOpacity style={styles.RegtrBtn}>\r\n                    <Text onPress={() => navigation.navigate('Profile',console.log({submitHandler}))}>REGISTER</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <View>\r\n                <TouchableOpacity>\r\n                    <Text style={styles.loginTxt} onPress={() => navigation.push('Login')}>Have an account? Login In</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    inputField: {\r\n        backgroundColor: \"#FFC0CB\",\r\n        borderRadius: 10,\r\n        width: width - 60,\r\n        height: '6%',\r\n        marginBottom: 20,\r\n        // alignItems: \"center\",\r\n    },\r\n    TextInput: {\r\n        height: 50,\r\n        flex: 1,\r\n        padding: 10,\r\n        marginLeft: 20,\r\n    },\r\n    RegtrBtn: {\r\n        width: width - 200,\r\n        borderRadius: 10,\r\n        height: 40,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 40,\r\n        marginLeft: 0,\r\n        backgroundColor: \"#FF1493\",\r\n    },\r\n    loginTxt: {\r\n        marginTop: 30,\r\n        marginBottom: 30,\r\n        color: 'green'\r\n\r\n    }\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}